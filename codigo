class Usuario:
    def __init__(self, nome, cpf, endereco):
        self.nome = nome
        self.cpf = cpf
        self.endereco = endereco

    def __str__(self):
        return f"Nome: {self.nome}\nCPF: {self.cpf}\nEndere√ßo: {self.endereco}"


class ContaCorrente:
    def __init__(self, numero_conta, titular, saldo=0, limite=500):
        self.numero_conta = numero_conta
        self.titular = titular
        self.saldo = saldo
        self.limite = limite
        self.numero_saques = 0

    def depositar(self, valor):
        self.saldo += valor

    def sacar(self, valor):
        if self.saldo + self.limite >= valor:
            self.saldo -= valor
            self.numero_saques += 1
            return True
        else:
            return False

    def extrato(self):
        return f"N√∫mero da conta: {self.numero_conta}\nTitular: {self.titular.nome}\nSaldo: {self.saldo}"


def formatar_cpf(cpf):
    cpf = ''.join(filter(str.isdigit, cpf))
    cpf_formatado = f"{cpf[:3]}.{cpf[3:6]}.{cpf[6:9]}-{cpf[9:]}"
    return cpf_formatado


def depositar():
    print("üè¶========= Depositar =========üè¶")
    numero_conta_deposito = int(input("N√∫mero da conta: "))
    valor_deposito = float(input("Qual √© o valor do dep√≥sito?\n=>"))
    for conta in contas_corrente:
        if conta.numero_conta == numero_conta_deposito:
            conta.depositar(valor_deposito)
            print("Dep√≥sito realizado com sucesso!")
            return
    print("Conta n√£o encontrada.")


def sacar():
    print("üí∏========= Sacar =========üí∏")
    numero_conta_saque = int(input("N√∫mero da conta: "))
    valor_saque = float(input("Qual √© o valor que deseja sacar?\n=>"))
    for conta in contas_corrente:
        if conta.numero_conta == numero_conta_saque:
            if conta.sacar(valor_saque):
                print("Saque realizado com sucesso!")
                return
            else:
                print("Saldo insuficiente.")
                return
    print("Conta n√£o encontrada.")


def extrato():
    print("üìú========= Extrato =========üìú")
    numero_conta_extrato = int(input("N√∫mero da conta: "))
    for conta in contas_corrente:
        if conta.numero_conta == numero_conta_extrato:
            print(conta.extrato())
            return
    print("Conta n√£o encontrada.")


def criar_usuario():
    print("üë§========= Criar Usu√°rio =========üë§")
    nome = input("Nome do usu√°rio: ")
    cpf = input("CPF do usu√°rio: ")

    cpf_formatado = formatar_cpf(cpf)

    for usuario in usuarios:
        if usuario.cpf == cpf_formatado:
            print("CPF j√° cadastrado. Um usu√°rio com este CPF j√° existe.")
            return

    endereco = input("Endere√ßo (logradouro, nro - bairro - cidade/estado): ")

    novo_usuario = Usuario(nome, cpf_formatado, endereco)
    usuarios.append(novo_usuario)
    print("Usu√°rio criado com sucesso!")


def criar_conta_corrente():
    global numero_conta
    print("üîí========= Criar Conta Corrente =========üîí")
    cpf = input("CPF do titular da conta: ")

    titular_encontrado = None
    for usuario in usuarios:
        if usuario.cpf == cpf:
            titular_encontrado = usuario
            break
    else:
        print("Usu√°rio com este CPF n√£o encontrado.")
        return

    nova_conta_corrente = ContaCorrente(numero_conta, titular_encontrado)
    contas_corrente.append(nova_conta_corrente)
    numero_conta += 1
    print(f"Conta corrente criada com sucesso! N√∫mero da conta: {nova_conta_corrente.numero_conta}")


menu_options = {
    'd': depositar,
    's': sacar,
    'e': extrato,
    'u': criar_usuario,
    'c': criar_conta_corrente
}

menu = """
======================================
[d]üè¶ Depositar
[s]üí∏ Sacar
[e]üìú Extrato
[u]üë§ Criar Usu√°rio
[c]üîí Criar Conta Corrente
[q]‚ùå Sair
======================================
=> """


def main():
    while True:
        opcao = input(menu)
        if opcao.lower() == 'q':
            break
        elif opcao.lower() in menu_options:
            menu_options[opcao.lower()]()
        else:
            print("Op√ß√£o inv√°lida! Por favor, selecione outra.")


usuarios = []
contas_corrente = []
numero_conta = 1

if __name__ == "__main__":
    main()
